{
  "name": "Iris-java9",
  "tagline": "IRIS Email Client using Java 9 modular system",
  "body": "# iris-java9\r\nIRIS Email Client using Java 9 modular system.\r\n\r\nThe IRIS project intention is to study software modularization techniques. We are building versions of the same project using java9 modular system (interfaces), aspectj (aspect-oriented programming) and deltaj (delta-oriented programming).\r\n\r\n## Pre requisites\r\n\r\nInstall a Java Early Access Release. You have basically two options:\r\n\r\n  * Download the JDK manually:\r\n\r\n[JDK 9 Early Access with Project Jigsaw](https://jdk9.java.net/jigsaw/)\r\n\r\n  * Use a package manager (ubuntu):\r\n\r\n```\r\nsudo add-apt-repository ppa:webupd8team/java\r\nsudo apt-get update\r\nsudo apt-get install oracle-java9-installer\r\n```\r\n\r\n### about java 9\r\n\r\nHere are few links to get started:\r\n\r\n* Articles:\r\n\r\n[Project Jigsaw] (http://openjdk.java.net/projects/jigsaw/)\r\n\r\n[Project Jigsaw: Module System Quick-Start Guide] (http://openjdk.java.net/projects/jigsaw/quick-start)\r\n\r\n[Project Jigsaw: Exploratory Phase] (http://openjdk.java.net/projects/jigsaw/exploratory-phase)\r\n\r\n[The State of the Module System] (http://openjdk.java.net/projects/jigsaw/spec/sotms/)\r\n\r\n[JEP 200: The Modular JDK] (http://openjdk.java.net/jeps/200)\r\n\r\n[Programming with Modularity and Project Jigsaw] (https://www.infoq.com/articles/Latest-Project-Jigsaw-Usage-Tutorial)\r\n\r\n[Managing in an Age of Modularity] (https://hbr.org/1997/09/managing-in-an-age-of-modularity/ar/1)\r\n\r\n[OSGi and Java 9 Modules Working Together] (http://njbartlett.name/2015/11/13/osgi-jigsaw.html)\r\n\r\n[Java 9 Module System] (http://blog.osgi.org/2015/10/java-9-module-system.html)\r\n\r\n[Modularity in Java 9] (http://www.javaworld.com/article/2878952/java-platform/modularity-in-java-9.html)\r\n\r\n* Videos: \r\n\r\n[Devoxx - Prepare for JDK 9! by Mark Reinhold/Alan Bateman] (https://www.youtube.com/watch?v=KZfbRuvv5qc) or [JavaOne - CON5107 Prepare for JDK 9] (https://www.youtube.com/watch?v=nBAUaOoBdGU)\r\n\r\n[JavaOne - CON5118 Introduction to Modular Development] (https://www.youtube.com/watch?v=a99RmjgG5Eo) or [Devoxx - Introduction to Modular Development by Mark Reinhold/Alan Bateman] (https://www.youtube.com/watch?v=qr4O4SbzihQ)\r\n\r\n[JavaOne - CON6821 Advanced Modular Development] (https://www.youtube.com/watch?v=YPQ2V-hQb8w)\r\n\r\n[JavaOne - CON6823 Project Jigsaw Under the Hood] (https://www.youtube.com/watch?v=xswtIp730Ho)\r\n\r\n[JavaOne - CON6826 Ask the Architects] (https://www.youtube.com/watch?v=jAL72EhLTXo)\r\n\r\n[JavaOne - TUT6825 Project Jigsaw Hack Session] (https://www.youtube.com/watch?v=r2DeuDCCywM)\r\n\r\n\r\n## dependencies\r\n\r\nDependencies, for now, will be downloaded 'manually', as declared on pom.xml\r\n\r\nThe dependencies should be selected/declared manually according to your modules selection\r\n\r\nThen run:\r\n\r\n`mvn package`\r\n\r\nto download jar libs to a specific folder, that will be used as an automatic module.\r\n\r\nExample: ... \r\n\r\n\r\n## build\r\n\r\n`build.sh`\r\n\r\n\r\n## usage\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}